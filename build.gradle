buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url "https://repo.spongepowered.org/repository/maven-public/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

repositories {
	maven {
        url "https://www.cursemaven.com"
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.12.2-1.1.8'

group = "net.smileycorp.ldoh"
archivesBaseName = "LDoH-Tweaks"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/ldoh_at.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

mixin {
    add sourceSets.main, "mixins.ldoh.refmap.json"
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
   minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
	implementation "org.spongepowered:mixin:0.8"
	
	implementation "curse.maven:atlas-463826:3816069"
	implementation "curse.maven:jei-238222:4393461"
	implementation "curse.maven:mixinbooter-419286:4459218"
	implementation "curse.maven:animania-261199:3213136"
	implementation "curse.maven:animania-farm-407632:3213139"
	implementation "curse.maven:bibliocraft-228027:3647708"
	implementation "curse.maven:bop-220318:3558882"
	implementation "curse.maven:buildcraft-61811:3204475"
	implementation "curse.maven:ultimate-car-mod-267458:2626135"
	implementation "curse.maven:cgm-289479:2854400"
	implementation "curse.maven:cookingforblockheads-231484:2464472"
	implementation "curse.maven:epicsiege-229449:2874756"
	implementation "curse.maven:exoticbirds-242830:2987034"
	implementation "curse.maven:firstaid-276837:4414252"
	implementation "curse.maven:fishsundead-321139:4017095"
	implementation "curse.maven:followme-463841:3520547"
	implementation "curse.maven:ftbquests-289412:3156637"
	implementation "curse.maven:cfm-55438:3865259"
	implementation "curse.maven:gamestages-268655:2951840"
	implementation "curse.maven:hordes-485779:4526757"
	implementation "curse.maven:iguanatweaks-285690:3283799"
	implementation "curse.maven:mobends-231347:3573346"
	implementation "curse.maven:realistictorches-235729:3152820"
	implementation "curse.maven:recurrentcomplex-223150:4356582"
	implementation "curse.maven:scapeandrun-348025:4494577"
	implementation "curse.maven:tektopia-333029:2763046"
	implementation "curse.maven:tf2stuffreloaded-859794:4530677"
	implementation "curse.maven:wasteland-284582:3573228"
	implementation "curse.maven:xlfood-247217:2740774"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "ldoh-tweaks",
            "Specification-Vendor": "smileycorp",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"smileycorp",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"ForceLoadAsMod": "true",
			"FMLAT": "ldoh_at.cfg",
			"FMLCorePluginContainsFMLMod": "false",
			"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
			"MixinConfigs": "mixins.ldoh.json"
        ])
        
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':"1.12.2"
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
